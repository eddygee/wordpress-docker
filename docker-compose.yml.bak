services:
  db:
    # We use a mariadb image which supports both amd64 & arm64 architecture
    image: mariadb:10.6.4-focal
    # If you really want to use MySQL, uncomment the following line
    #image: mysql:8.0.27
    command: '--default-authentication-plugin=mysql_native_password'
    volumes:
      - db_data:/var/lib/mysql
    container_name: db
    restart: unless-stopped
    env_file: .env
    environment:
      #- MYSQL_ROOT_PASSWORD=somewordpress
      - MYSQL_DATABASE=wordpress
      #- MYSQL_USER=wordpress
      #- MYSQL_PASSWORD=wordpress
    networks:
      - app-network
#    expose:
#      - 3306
#      - 33060
  
  wordpress:
    depends_on:
      - db
    image: wordpress:latest
    container_name: wordpress
    volumes:
      - wp_data:/var/www/html
#    ports:
#      - 80:80
    restart: unless-stopped
    env_file: .env
    environment:
      - WORDPRESS_DB_HOST=db:3306
      - WORDPRESS_DB_USER=$MYSQL_USER
      - WORDPRESS_DB_PASSWORD=$MYSQL_PASSWORD
      - WORDPRESS_DB_NAME=wordpress
    networks:
      - app-network
  
  webserver:
    depends_on:
      - wordpress
    image: nginx:1.15.12-alpine
    container_name: webserver
    restart: unless-stopped
    ports:
      - 80:80
    volumes:
      - wp_data:/var/www/html
      - ./nginx-conf:/etc/nginx/conf.d
#      - certbot-etc:/etc/letsencrypt
    networks:
      - app-network

#  certbot:
#    depends_on:
#      - webserver
#    image: certbot/certbot
#    container_name: certbot
#    volumes:
#      - certbot-etc:/etc/letsencrypt
#      - wp_data:/var/www/html
#    command: certonly --webroot --webroot-path=/var/www/html --email sammy@your_domain --agree-tos --no-eff-email --staging -d your_domain -d www.your_domain

volumes:
  certbot-etc:
  db_data:
  wp_data:

networks:
  app-network:
    driver: bridge